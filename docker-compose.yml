services:
  # Postgres service
  postgres:
    image: postgres:latest
    environment:
      PGUSER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - service-network
    ports:
      - "${DB_PORT}:${DB_PORT}"
    expose:
      - ${DB_PORT}
    volumes:
      - db-data:/var/lib/postgresql/data
  # Redis service
  redis:
    image: redis:latest
    networks:
      - service-network
    ports:
      - "${REDIS_PORT}:6379"
    expose:
      - 6379
    volumes:
      - redis-data:/data
  # Backend service
  backend-service:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
        replicas: 1 # Scaleable...
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - service-network
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    expose:
    - ${SERVER_PORT}
    env_file:
      - .env
networks:
  service-network:
    driver: bridge

volumes:
  db-data:
  redis-data: